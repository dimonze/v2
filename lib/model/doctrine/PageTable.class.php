<?php

/**
 * PageTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PageTable extends Doctrine_Table
{
  /**
    * Returns an instance of this class.
    *
    * @return object PageTable
    */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Page');
  }

  public function createQueryI18N($alias = 'a', $culture = null)
  {
    if (!$culture) $culture = sfContext::getInstance()->getUser()->getCulture();
    return $this->createQuery($alias)
            ->innerJoin($alias.'.Translation t WITH t.lang = ?', $culture);
  }

  public function getFirstLevelPages($culture = null)
  {
    return $this->createQueryI18N('p', $culture)
            ->where('p.level = 1')
            ->orderBy('p.lft')
            ->execute();
  }

  public function getFooterPages($culture = null)
  {
    $this->setAttribute(Doctrine::ATTR_COLL_KEY, 'id');

    return $this->createQueryI18N('p', $culture)
            ->whereIn('p.id', array(Page::ADDRESS_PAGE, Page::JOBS_PAGE))
            ->execute();
  }

  public function getTitlesI18N($ids, $culture = null)
  {
    if (!$culture) $culture = sfContext::getInstance()->getUser()->getCulture();

    $conn = $this->getConnection();
    $stmt = $conn->execute('SELECT `id`, `title` FROM `page_translation` WHERE `id` IN ('.implode(',', $ids).') AND `lang` = ?', array($culture));

    return $stmt->fetchAll(PDO::FETCH_KEY_PAIR);
  }

  public function getForSitemap()
  {
    return $this->createQuery('p')
            ->select('p.id, p.slug, t.id')
            ->leftJoin('p.Translation t')
            ->whereNotIn('p.id', array(12,19,20,25))//for press
            ->orderBy('p.id DESC')
            ->fetchArray();
  }

  public function findTree()
  {
    $tree = $this->getTree();

    $base_query = $tree->getBaseQuery();
    $base_query->leftJoin($base_query->getRootAlias().'.Translation t WITH t.lang = "ru"')
            ->where('level = ?', 1);
    $tree->setBaseQuery($base_query);

    $pages = $tree->fetchTree();
    $tree->resetBaseQuery();

    return $pages;
  }

  public function getObjectItem($params)
  {
    return $this->createQueryI18N('p', $params['sf_culture'])
            ->andWhere('p.slug = ?', $params['slug'])
            ->fetchOne();
  }

  public function retrieveBackendPageList(Doctrine_Query $q)
  {
    $rootAlias = $q->getRootAlias();
    $q->andWhere($rootAlias.'.id <> ?', 1)
            ->leftJoin($rootAlias.'.Translation t WITH t.lang = "ru"');

    return $q;
  }
}