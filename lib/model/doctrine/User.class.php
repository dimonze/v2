<?php

/**
 * User
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    garage
 * @subpackage model
 * @author     Garin Studio <eugeniy.b@garin-studio.ru>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class User extends BaseUser
{
  public static $_groups = array(
    'PRESS'   => 'СМИ',
    'MEMBER'  => 'Клуб',
  );

  protected $_raw_password;


  public function getGroupTitle()
  {
    return $this->_get('group') ? self::$_groups[$this->_get('group')] : '';
  }

  public function getIsMember()
  {
    return $this->group == 'MEMBER';
  }

  public function getIsPress()
  {
    return $this->group == 'PRESS';
  }

  public function getAuthToken()
  {
    return hash('md5', $this->_get('email').$this->_get('password')).$this->id;
  }

  public function getRecoveryToken()
  {
    return sha1($this->id . $this->password . date('Ym'));
  }

  public function setPassword($value)
  {
    if (!empty($value) && !preg_match('/^[0-9a-f]{40}$/', $value)) {
      $this->_raw_password = $value;
      $this->_set('password', self::handlePassword($value));
    }
  }

  public function preInsert($event)
  {
    $this->_set('token', self::generateCode(16));

    parent::preInsert($event);
  }

  public function postInsert($event)
  {
    $this->sendRegistrationEmail();

    parent::postInsert($event);
  }


  private function sendRegistrationEmail()
  {
    $mailer = sfContext::getInstance()->getMailer();
    $message = $mailer->compose();
    $message->setSubject('Congratulations!!!');
    $message->setFrom('reg@garageccc.com', 'Центр Современной Культуры "Гараж"');
    $message->setTo($this->email, $this->fio);
    $message->setBody(sprintf('Пароль: %s', $this->_raw_password), 'text/html');
    $mailer->send($message);
  }


  public static function generateCode($length = 8)
  {
    $chars = array_merge(range('0','9'), range('A','Z'), range('a','z'));
    $string = '';
    while ($length--) {
      $string .= $chars[array_rand($chars)];
    }

    return $string;
  }

  public static function generatePassword()
  {
    $pass = '';
    $syllables = array('er','in','tia','wol','fe','pre','vet','jo','nes','al','len','son','cha','ir','ler','bo','ok','tio','nar','sim','ple','bla','ten','toe','cho','co','lat','spe','ak','er','po','co','lor','pen','cil','li','ght','wh','at','the','he','ck','is','mam','bo','no','fi','ve','any','way','pol','iti','cs','ra','dio','sou','rce','sea','rch','pa','per','com','bo','sp','eak','st','fi','rst','gr','oup','boy','ea','gle','tr','ail','bi','ble','brb','pri','dee','kay','en','be','se');

    for ($c=2; $c>=1; $c--) {
      $string = $syllables[mt_rand(0, (count($syllables)-1))];
      $pass .= mt_rand(0, 1) ? $string : ucfirst($string);
    }

    $start = mt_rand(1, strlen($pass));
    $pass = substr($pass, 0, $start).mt_rand(10,99).substr($pass, $start);

    return $pass;
  }

  public static function handlePassword($string)
  {
    return hash('SHA1', $string.'yarrRRR!');
  }
}